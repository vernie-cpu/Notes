'''
畅通工程：
    某省调查城镇（共20个城镇）之间的交通状况，并列出了每条道路直接连接的两个城市编号。
    已经建好道路的城镇：(0,1),(6,9),(3,8),(5,11),(2,12),(6,10),(4,8)
    畅通工程的目标是使城镇之间都可以实现交通（不一定要直达，间接到达也可以），问最少还需要建设多少条道路。

解决思路：
    1、创建一个并查集，列表长度为20
    2、分别对已经修建的城镇调用union，即在同一分组中，就表示两个城镇已经联通
    3、如果城镇全部联通，那么并查集将只有一个分组。所以当前还需要修建的道路数量应该是并查集分组数量减一
'''

from 并查集路径压缩 import UF_Tree_Weighted

uf = UF_Tree_Weighted(20)
uf.union(0, 1)
uf.union(6, 9)
uf.union(3, 8)
uf.union(5, 11)
uf.union(2, 12)
uf.union(6, 10)
uf.union(4, 8)

print("还应修建的道路数量为：", uf.count - 1)
